package Solutions;

import java.util.*;
import java.io.*;

public class Main {
	
	File encfile = new File("encryped.txt");
	HashMap<Character, Integer> emap = new HashMap<Character, Integer>();
	HashMap<Character, Integer> map = new HashMap<Character, Integer>();
	
	public File encrypt(File filename) throws IOException{
		FileReader fr = new FileReader(filename);
		BufferedReader br = new BufferedReader(fr);
		BufferedWriter bw = new BufferedWriter(new FileWriter(encfile));
		
		String line = null;
		int offset = 12;
		StringBuilder sb = new StringBuilder();
		while((line = br.readLine()) != null){
			for(char i : line.toCharArray()){
				if(Character.isLetter(i)){
					if(Character.isUpperCase(i)){
						sb.append('A' + (i - 'A' + offset) % 26);
					}
					else{
						sb.append('a' + (i - 'a' + offset) % 26);
					}
				}
				else{
					sb.append(i);
				}
				bw.write(sb.toString().toLowerCase());
			}
			bw.newLine();
		}
		br.close();
		bw.flush();
		bw.close();		
		return encfile;
	}
	
	//Method for scanning the encrypted file for number of occurrences of letters
	
	public void scanEncFile() throws IOException{
		Scanner scan = new Scanner(encfile, "utf-8");
		int count;
		while(scan.hasNext()){
			char[] ch = scan.nextLine().toCharArray();
			for(Character c : ch){
				if(emap.containsKey(c)){
					count = emap.get(c);
					count++;
					emap.put(c, count);
				}
				else{
					emap.put(c, 1);
				}
			}
		}
		scan.close();
	}
	
	//Method for developing the frequency analysis model
	
	public void freqAnal(File[] file, int t){
		String line;
		FileReader fr = null;
		BufferedReader br = null;
		int count;
		try{
			for(int i = 0; i < file.length; i++){
				if(i != t){
					fr = new FileReader(file[i]);
					br = new BufferedReader(fr);
					while((line = br.readLine()) != null){
						for(char c : line.toCharArray()){
							if(map.containsKey(c)){
								count = map.get(c);
								count++;
								map.put(c, count);
							}
							else{
								map.put(c, 1);
							}
						}
					}
				}
			}
		}
		catch (IOException e){
			e.printStackTrace();
		}
		finally{
			try{
				if(br != null)
					br.close();
				if(fr != null)
					fr.close();
			}
			catch(IOException ex){
				ex.printStackTrace();
			}
		}
	}
	
	public static void main(String[]args) throws IOException{
		
		
	}

}
